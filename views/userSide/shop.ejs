<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Heaven Interior</title>
    <!-- <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css"> -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

<style>
    body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f9f9f9;
}

a {
    text-decoration: none; /* Removes underline from all links */
    color: inherit; /* Ensures the color is inherited rather than default blue */
}


.product-page {
    display: flex;
    margin-left: 3%;
    margin-right: 1%;
}

.sidebar {
    margin-top: 1em;
    width: 18%;
    background-color: #f5f5f5;
    border-radius: 8px;
    padding-left: 1%;
    margin-right: 2%;
    position: sticky; /* Keeps sidebar fixed when scrolling */
    top: 20px; /* Distance from the top when sticky */
    height: fit-content; }

.sidebar label {
    margin-bottom: 1em; /* Space between the title and checkboxes */
}

.product-list {
    flex: 1;
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* 3 items per row */
    gap: 2%;
}

.product-card {
    border: 1px solid #ddd;
    border-radius: 10px;
    overflow: hidden;
    background-color: white;
    transition: box-shadow 0.3s;
    display: flex;
    flex-direction: column;
    height: 100%;
    width: 100%;
    margin: 1em;
}

.product-card:hover {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.product-image img {
    width: 100%;
    height: 250px;
    object-fit: cover;
}

.product-info {
    padding: 15px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex-grow: 1;
}

.product-title {
    font-size: 1.2rem;
    font-weight: bold;
    color: #333;
    margin-bottom: 10px;
}

.product-description {
    font-size: 0.95rem;
    color: #666;
    margin-bottom: 15px;
    flex-grow: 1;
}

.product-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 10px;
    border-top: 1px solid #eee;
}

.product-price {
    font-size: 1.1rem;
    font-weight: bold;
    color: #333;
}

.wishlist-button {
    color: #ff0000;
    font-size: 1.3rem;
    text-decoration: none;
}

.wishlist-button:hover {
    color: #cc0000;
}

/* Responsive for small screens */
@media (max-width: 768px) {
    .sidebar {
        width: 100%;
    }
    .product-list {
        grid-template-columns: 1fr;
    }
}


#notification {
    position: fixed;
    bottom: 20px;
    right: 20px;
    padding: 10px 20px;
    background-color: #333;
    color: #fff;
    border-radius: 5px;
    display: none;
    z-index: 1000;
    transition: opacity 0.5s;
}

.product-list-container {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.pagination {
    margin-top: 20px;
    display: flex;
    gap: 10px;
    justify-content: center;
}

.pagination a {
    padding: 8px 12px;
    text-decoration: none;
    color: #333;
    border: 1px solid #ddd;
    border-radius: 4px;
}

.pagination a.active {
    background-color: #3b940f;
    color: white;
}


</style>


    <%- include('../partials/user_navbar.ejs') %>

    <div class="container product-page">
        <aside class="sidebar">
            <h3>Categories</h3>
            <form id="filterForm">
                <div class="category-filter">
                    <% categories.forEach(category => { %>
                        <label>
                            <input type="checkbox" name="category" value="<%= category._id %>">
                            <%= category.name %>
                        </label><br>
                    <% }) %>
                </div>
    
                <h3>Sort By</h3>
                <div class="sort-filter">
                    <label>
                        <input type="radio" name="sort" value="popularity">
                        Popularity
                    </label>
                    <label>
                        <input type="radio" name="sort" value="priceLowToHigh">
                        Price: Low to High
                    </label>
                    <label>
                        <input type="radio" name="sort" value="priceHighToLow">
                        Price: High to Low
                    </label>
                    <label>
                        <input type="radio" name="sort" value="newArrivals">
                        New Arrivals
                    </label>
                </div>
            </form>
        </aside>       
        <div class="product-list" id="productsContainer">
            <% if (products.length > 0) { %>
                <% products.forEach(function(product) { %>
                    <div class="product-card">
                        <a href="/user/product/<%= product._id %>?source=productList">
                            <div class="product-image">
                                <img src="/<%= product.images[0] || 'placeholder.jpg' %>" alt="<%= product.name %>">
                            </div>
                            <div class="product-info">
                                <h5 class="product-title"><%= product.name %></h5>
                                <p class="product-description"><%= product.description %></p>
                                <% if (product.stockStatus === 'In Stock') { %>
                                    <p style="color: green;"><%= product.stock %> left</p>
                                <% } else { %>
                                    <p class="out-of-stock" style="color: #dc3545;">Out of stock</p>
                                <% } %>
                                <div class="product-footer">
                                    <div class="product-price">
                                        <% if (product.discountedPrice) { %>
                                            <span style="text-decoration: line-through; color: #999;">‚Çπ<%= product.price %></span>
                                            <h5 style="display: inline; color: #3b940f; font-weight: 700;">‚Çπ<%= product.discountedPrice %></h5>
                                        <% } else { %>
                                            <h5 style="color: #3b940f; font-weight: 700;">‚Çπ<%= product.price %></h5>
                                        <% } %>
                                    </div>
                                    <a href="#" class="wishlist-button <%= isAuthenticated ? '' : 'disabled' %>" 
                                        data-product-id="<%= product._id %>" 
                                        onclick="handleWishlist('<%= product._id %>', this, <%= isAuthenticated %>)">
                                         <%= wishlist.includes(product._id.toString()) ? '‚ù§Ô∏è' : 'ü§ç' %>
                                     </a>
                            </div>
                            </div>
                        </a>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="no-products">No products found</div>
            <% } %>
        </div>
    </div>
    <div id="notification"></div>

    <div class="pagination">
        <% if (currentPage > 1) { %>
            <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
        <% } %>
        <% for (let i = 1; i <= totalPages; i++) { %>
            <a href="?page=<%= i %>" class="<%= i === currentPage ? 'active' : '' %>"><%= i %></a>
        <% } %>
        <% if (currentPage < totalPages) { %>
            <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
        <% } %>
    </div>

    <%- include('../partials/footer') %>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
   <script>

function showNotification(message) {
    const notification = document.getElementById('notification');
    notification.innerText = message;
    notification.style.display = 'block';
    notification.style.opacity = '1';

    setTimeout(() => {
        notification.style.opacity = '0';
        setTimeout(() => {
            notification.style.display = 'none';
        }, 500);
    }, 2000);
}

    async function handleWishlist(productId, element, isAuthenticated) {
        if (!isAuthenticated) { 
            alert("You need to log in to use the wishlist.");
            window.location.href = '/user/user_login'; 
        return;
    }

    try {
        const response = await fetch(`/user/wishlist/toggle/${productId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        });

        const data = await response.json();
        if (data.success) {
            
            if (data.action == 'added') {
                element.innerHTML = '‚ù§Ô∏è'; // Change heart to filled
                element.classList.add('active'); // Optionally, add a class to indicate active
                showNotification("Added to wishlist")
            } else {
                element.innerHTML = 'ü§ç'; // Change heart to outlined
                element.classList.remove('active'); // Optionally, remove the active class
                showNotification("Removed from wishlist")
            }

        } else {
            alert('Failed to update wishlist. Please try again.');
        }
    } catch (error) {
        console.error('Error toggling wishlist:', error);
        alert('An error occurred while updating the wishlist.');
    }
}


document.addEventListener('DOMContentLoaded', () => {
    let currentPage = 1;
    const productsContainer = document.getElementById('productsContainer');
    const paginationContainer = document.querySelector('.pagination');

    function renderPagination(currentPage, totalPages, fetchFunction) {
        paginationContainer.innerHTML = '';
        if (currentPage > 1) {
            paginationContainer.innerHTML += `<a href="#" onclick="${fetchFunction}(${currentPage - 1})">&laquo; Previous</a>`;
        }
        for (let i = 1; i <= totalPages; i++) {
            paginationContainer.innerHTML += `<a href="#" onclick="${fetchFunction}(${i})" class="${i === currentPage ? 'active' : ''}">${i}</a>`;
        }
        if (currentPage < totalPages) {
            paginationContainer.innerHTML += `<a href="#" onclick="${fetchFunction}(${currentPage + 1})">Next &raquo;</a>`;
        }
    }

    function renderProducts(data) {
        productsContainer.innerHTML = data.products.length > 0 ? '' : '<div class="no-products">No products found</div>';
        data.products.forEach(product => {
            const stockInfo = product.stockStatus === 'In Stock' 
                ? `<p style="color: green;">${product.stock} left</p>` 
                : `<p class="out-of-stock" style="color: #dc3545;">Out of stock</p>`;
            const priceDisplay = product.discountedPrice
                ? `<span style="text-decoration: line-through; color: #999;">‚Çπ${product.price}</span>
                   <h5 style="color: #3b940f; font-weight: 700;">‚Çπ${product.discountedPrice}</h5>`
                : `<h5 style="color: #3b940f; font-weight: 700;">‚Çπ${product.price}</h5>`;
            
            productsContainer.innerHTML += `
                <div class="product-card">
                    <a href="/user/product/${product._id}?source=productList">
                        <div class="product-image">
                            <img src="/${product.images[0] || 'placeholder.jpg'}" alt="${product.name}">
                        </div>
                        <div class="product-info">
                            <h5 class="product-title">${product.name}</h5>
                            <p class="product-description">${product.description}</p>
                            ${stockInfo}
                            <div class="product-footer">
                                <div class="product-price">${priceDisplay}</div>
                                <a href="#" class="wishlist-button" data-product-id="${product._id}" onclick="handleWishlist('${product._id}', this, ${isAuthenticated})">
                                    ${wishlist.includes(product._id.toString()) ? '‚ù§Ô∏è' : 'ü§ç'}
                                </a>
                            </div>
                        </div>
                    </a>
                </div>`;
        });
    }

    function loadCompleteProducts(page = 1) {
        fetch(`/user/product/list?page=${page}`)
            .then(response => response.json())
            .then(data => {
                renderProducts(data);
                renderPagination(data.currentPage, data.totalPages, 'loadCompleteProducts');
            })
            .catch(error => console.error('Error loading products:', error));
    }

    function filterProducts(page = 1) {
        const selectedCategories = Array.from(document.querySelectorAll('.category-filter input[type="checkbox"]:checked')).map(cb => cb.value);
        const sort = document.querySelector('.sort-filter input[type="radio"]:checked')?.value || '';

        fetch('/user/product/filter', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ selectedCategories, sort, page })
        })
            .then(response => response.json())
            .then(data => {
                renderProducts(data);
                renderPagination(data.currentPage, data.totalPages, 'filterProducts');
            })
            .catch(error => console.error('Fetch error:', error));
    }

    // Event listeners for filters
    document.querySelectorAll('.category-filter input[type="checkbox"]').forEach(checkbox => {
        checkbox.addEventListener('change', () => filterProducts(1));
    });
    document.querySelectorAll('.sort-filter input[type="radio"]').forEach(radio => {
        radio.addEventListener('change', () => filterProducts(1));
    });

    // Load full product list on initial page load
    loadCompleteProducts();
});

</script>
<% if (user) { %>
    <script>
        const isAuthenticated = true; // User is logged in
        const wishlist = <%= JSON.stringify(user.wishlist || []) %>; // Assuming user has a wishlist property
    </script>
<% } else { %>
    <script>
        const isAuthenticated = false; // User is not logged in
        const wishlist = []; // No wishlist for unauthenticated users
    </script>
<% } %>

        
        
</body>
</html>
